const mongoose = require('mongoose');

const loanSchema = new mongoose.Schema({
    Id: { type: Number, required: true },
    BranchCode: { type: String, required: true },
    CustomerCode: { type: String, required: true },
    LoanType: { type: String },
    LoanCode: { type: String },
    LoanProduct: { type: String },
    PaymentFrequency: { type: String },
    LoanDate: { type: Date },
    Instalment: { type: Number },
    ReceiptNo: { type: String },
    EfeeReceipt: { type: String },
    NumberOfDays: { type: Number },
    PaymentDate: { type: Date },
    LastPaymentDate: { type: Date },
    MaturityDate: { type: Date },
    PenaltyDate: { type: Date },
    Currency: { type: String },
    ExchangeRate: { type: Number },
    AmountPaid: { type: Number },
    PrincipalAmount: { type: Number },
    AdminFeeRate: { type: Number },
    CashHandlingFeeRate: { type: Number },
    EfeeRate: { type: Number },
    InterestRate: { type: Number },
    PenaltyRate: { type: Number },
    AdminFee: { type: Number },
    CashHandlingFee: { type: Number },
    Efee: { type: Number },
    Interest: { type: Number },
    Penalty: { type: Number },
    LoanBalance: { type: Number },
    AStatus: { type: String },
    AReason: { type: String },
    CreatedBy: { type: String },
    CreatedDate: { type: Date },
    CreatedByIp: { type: String },
    RecordDeleted: { type: Boolean },
    CompanyCode: { type: String },
    GracePeriod: { type: Number },
    StartDate: { type: Date },
    EditRequest: { type: Boolean },
    EditRequestBy: { type: String },
    EditRequestDate: { type: Date },
    EditRequestByIp: { type: String },
    DeleteRequest: { type: Boolean },
    DeleteRequestBy: { type: String },
    DeleteRequestDate: { type: Date },
    DeleteRequestByIp: { type: String },
    DiscountRequest: { type: Boolean },
    DiscountRequestBy: { type: String },
    DiscountRequestDate: { type: Date },
    DiscountRequestByIp: { type: String },
    WriteOffRequest: { type: Boolean },
    WriteOffRequestBy: { type: String },
    WriteoffDate: { type: Date },
    WriteOffeRequestByIp: { type: String },
    EditRequestReason: { type: String },
    EditRequestGranted: { type: Boolean },
    EditRequestGrantedBy: { type: String },
    EditRequestGrantedDate: { type: Date },
    EditRequestGrantedByIp: { type: String },
    DeleteRequestGranted: { type: Boolean },
    DeleteRequestGrantedBy: { type: String },
    DeleteRequestGrantedDate: { type: Date },
    DeleteRequestGrantedByIp: { type: String },
    DiscountRequestGranted: { type: Boolean },
    DiscountRequestGrantedBy: { type: String },
    DiscountRequestGrantedDate: { type: Date },
    DiscountRequestGrantedByIp: { type: String },
    WriteOffRequestGranted: { type: Boolean },
    WriteOffRequestGrantedBy: { type: String },
    WriteOffRequestGrantedDate: { type: Date },
    WriteOffeRequestGrantedByIp: { type: String },
    WriteoffAmount: { type: Number },
    Arrears: { type: Number },
    PenaltyInterest: { type: Number },
    InterestDate: { type: Date },
    NextPaymentDate: { type: Date },
    AgedDate: { type: Date },
    WrittenOff: { type: Boolean },
    Approved: { type: Boolean },
    ImagePath: { type: String },
    CheckedBy: { type: String },
    CheckedDate: { type: Date },
    CheckedByIp: { type: String },
    CheckedStatus: { type: String },
    CheckedReason: { type: String },
    ApprovedBy: { type: String },
    ApprovedDate: { type: Date },
    ApprovedByIp: { type: String },
    ApprovalStatus: { type: String },
    ApprovalReason: { type: String },
    RiskGrade: { type: String },
    UltimateApprover: { type: String },
    ProductType: { type: String },
    SubPaymentFrequency: { type: String },
    PenaltyInterestRate: { type: Number },
    FirstInstalmentRate: { type: Number },
    CompoundingRate: { type: Number },
    ClaimableBalance: { type: Number },
    LoanReference: { type: String },
    SalesDate: { type: Date },
    DisbursedBy: { type: String },
    DisbursedDate: { type: Date },
    DisbursedByIp: { type: String },
    DisbursedStatus: { type: String },
    DisbursedReason: { type: String },
    InstallmentAmount: { type: Number },
    NationalID: { type: String },
    Sector: { type: String },
    SubSector: { type: String },

});

const Loan = mongoose.model('Loan', loanSchema);

module.exports = Loan;
